{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar JSONValueNode = function JSONValueNode(_ref) {\n  var nodeType = _ref.nodeType,\n      styling = _ref.styling,\n      labelRenderer = _ref.labelRenderer,\n      keyPath = _ref.keyPath,\n      valueRenderer = _ref.valueRenderer,\n      value = _ref.value,\n      _ref$valueGetter = _ref.valueGetter,\n      valueGetter = _ref$valueGetter === void 0 ? function (value) {\n    return value;\n  } : _ref$valueGetter;\n  return /*#__PURE__*/_react[\"default\"].createElement(\"li\", styling('value', nodeType, keyPath), /*#__PURE__*/_react[\"default\"].createElement(\"label\", styling(['label', 'valueLabel'], nodeType, keyPath), labelRenderer(keyPath, nodeType, false, false)), /*#__PURE__*/_react[\"default\"].createElement(\"span\", styling('valueText', nodeType, keyPath), valueRenderer.apply(void 0, [valueGetter(value), value].concat(_toConsumableArray(keyPath)))));\n};\n\nJSONValueNode.propTypes = {\n  nodeType: _propTypes[\"default\"].string.isRequired,\n  styling: _propTypes[\"default\"].func.isRequired,\n  labelRenderer: _propTypes[\"default\"].func.isRequired,\n  keyPath: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number]).isRequired).isRequired,\n  valueRenderer: _propTypes[\"default\"].func.isRequired,\n  value: _propTypes[\"default\"].any,\n  valueGetter: _propTypes[\"default\"].func\n};\nvar _default = JSONValueNode;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../src/JSONValueNode.tsx"],"names":["JSONValueNode","nodeType","styling","labelRenderer","keyPath","valueRenderer","value","valueGetter","PropTypes","func"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,IAAMA,aAA6C,GAAG,SAAhDA,aAAgD,CAAA,IAAA,EAAA;AAAA,MACpDC,QADoD,GAAA,IAAA,CAAA,QAAA;AAAA,MAEpDC,OAFoD,GAAA,IAAA,CAAA,OAAA;AAAA,MAGpDC,aAHoD,GAAA,IAAA,CAAA,aAAA;AAAA,MAIpDC,OAJoD,GAAA,IAAA,CAAA,OAAA;AAAA,MAKpDC,aALoD,GAAA,IAAA,CAAA,aAAA;AAAA,MAMpDC,KANoD,GAAA,IAAA,CAAA,KAAA;AAAA,MAAA,gBAAA,GAAA,IAAA,CAAA,WAAA;AAAA,MAOpDC,WAPoD,GAAA,gBAAA,KAAA,KAAA,CAAA,GAOtC,UAAA,KAAA,EAAA;AAAA,WAAA,KAAA;AAPsC,GAAA,GAAA,gBAAA;AAAA,SAAA,aASpD,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,IAAA,EAAQL,OAAO,CAAA,OAAA,EAAA,QAAA,EAAf,OAAe,CAAf,EAAA,aACE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,OAAA,EAAWA,OAAO,CAAC,CAAA,OAAA,EAAD,YAAC,CAAD,EAAA,QAAA,EAAlB,OAAkB,CAAlB,EACGC,aAAa,CAAA,OAAA,EAAA,QAAA,EAAA,KAAA,EAFlB,KAEkB,CADhB,CADF,EAAA,aAIE,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAA,MAAA,EAAUD,OAAO,CAAA,WAAA,EAAA,QAAA,EAAjB,OAAiB,CAAjB,EACGG,aAAa,CAAbA,KAAAA,CAAAA,KAAAA,CAAAA,EAAAA,CAAcE,WAAW,CAAzBF,KAAyB,CAAzBA,EAAAA,KAAAA,EAAAA,MAAAA,CAAAA,kBAAAA,CAd+C,OAc/CA,CAAAA,CAAAA,CADH,CAJF,CAToD;AAAtD,CAAA;;AAmBAL,aAAa,CAAbA,SAAAA,GAA0B;AACxBC,EAAAA,QAAQ,EAAEO,UAAAA,CAAAA,SAAAA,CAAAA,CAAAA,MAAAA,CADc,UAAA;AAExBN,EAAAA,OAAO,EAAEM,UAAAA,CAAAA,SAAAA,CAAAA,CAAAA,IAAAA,CAFe,UAAA;AAGxBL,EAAAA,aAAa,EAAEK,UAAAA,CAAAA,SAAAA,CAAAA,CAAAA,IAAAA,CAHS,UAAA;AAIxBJ,EAAAA,OAAO,EAAEI,UAAAA,CAAAA,SAAAA,CAAAA,CAAAA,OAAAA,CACPA,UAAAA,CAAAA,SAAAA,CAAAA,CAAAA,SAAAA,CAAoB,CAACA,UAAAA,CAAAA,SAAAA,CAAAA,CAAD,MAAA,EAAmBA,UAAAA,CAAAA,SAAAA,CAAAA,CAAvCA,MAAoB,CAApBA,EADOA,UAAAA,EAJe,UAAA;AAOxBH,EAAAA,aAAa,EAAEG,UAAAA,CAAAA,SAAAA,CAAAA,CAAAA,IAAAA,CAPS,UAAA;AAQxBF,EAAAA,KAAK,EAAEE,UAAAA,CAAAA,SAAAA,CAAAA,CARiB,GAAA;AASxBD,EAAAA,WAAW,EAAEC,UAAAA,CAAAA,SAAAA,CAAAA,CAAUC;AATC,CAA1BT;eAYeA,a","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { JSONValueNodeCircularPropsProvidedByJSONNode } from './types';\n\n/**\n * Renders simple values (eg. strings, numbers, booleans, etc)\n */\n\ninterface Props extends JSONValueNodeCircularPropsProvidedByJSONNode {\n  nodeType: string;\n  value: any;\n  valueGetter?: (value: any) => any;\n}\n\nconst JSONValueNode: React.FunctionComponent<Props> = ({\n  nodeType,\n  styling,\n  labelRenderer,\n  keyPath,\n  valueRenderer,\n  value,\n  valueGetter = (value) => value,\n}) => (\n  <li {...styling('value', nodeType, keyPath)}>\n    <label {...styling(['label', 'valueLabel'], nodeType, keyPath)}>\n      {labelRenderer(keyPath, nodeType, false, false)}\n    </label>\n    <span {...styling('valueText', nodeType, keyPath)}>\n      {valueRenderer(valueGetter(value), value, ...keyPath)}\n    </span>\n  </li>\n);\n\nJSONValueNode.propTypes = {\n  nodeType: PropTypes.string.isRequired,\n  styling: PropTypes.func.isRequired,\n  labelRenderer: PropTypes.func.isRequired,\n  keyPath: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n  ).isRequired,\n  valueRenderer: PropTypes.func.isRequired,\n  value: PropTypes.any,\n  valueGetter: PropTypes.func,\n};\n\nexport default JSONValueNode;\n"]},"metadata":{},"sourceType":"script"}