{"ast":null,"code":"import React from 'react';\nimport { render, unmountComponentAtNode } from 'react-dom';\n\nvar SnackbarItem = function SnackbarItem(props) {\n  var getColor = function getColor() {\n    if (props.type === 'success') return '#1aaa55';else if (props.type === 'error') return '#f44336';else if (props.type === 'info') return '#42a5f5';else return props.dark ? '#ddd' : '#3d3d3d';\n  };\n\n  var getRadius = function getRadius() {\n    if (props.borderType === 'rounded') return '60px';\n    if (props.borderType === 'tile') return '0';else return '4px';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rui-snackbar-message-container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rui-snackbar \".concat(props.type ? props.type : '').trim()\n  }, props.message, props.controls), /*#__PURE__*/React.createElement(\"style\", {\n    jsx: \"true\"\n  }, \"\\n                @keyframes SlideInOut {\\n                    0%{\\n                        transform: translateY(0);\\n                        opacity: .3;\\n                    }\\n                    \".concat(props.transitionPercentage, \"% {\\n                        transform: translateY(-20px);\\n                        opacity: 1;\\n                    }\\n                    \").concat(100 - props.transitionPercentage, \"% {\\n                        transform: translateY(-20px);\\n                        opacity: 1;\\n                    }\\n                    100% {\\n                        transform: translateY(0px);\\n                        opacity: .3;\\n                    }\\n                }\\n                @media (max-width: 529px) {\\n                    .rui-snackbar-message-container {\\n                        max-width: 90%;\\n                        width: 90%;\\n                    }\\n                }\\n                .rui-snackbar-container {\\n                    position: fixed;\\n                    width: 100%;\\n                    bottom: 16px;\\n                    left: 0px;\\n                    z-index: 9999;\\n                }\\n                .rui-snackbar {\\n                    display: flex;\\n                    align-items: center;\\n                    justify-content: \").concat(props.controls ? 'space-between' : 'center', \";\\n                    flex: 1;\\n                    padding: 0 15px;\\n                    border-radius: \").concat(getRadius(), \";\\n                    font-size: 15px;\\n                    min-height: 45px;\\n                }\\n                .rui-snackbar > button, div, span, i {\\n                    margin-top: 0;\\n                    margin-bottom: 0;\\n                }\\n                .rui-snackbar-message-container {\\n                    color: \").concat(props.dark ? '#000' : '#fff', \";\\n                    max-width: 350px;\\n                    box-shadow: 0 1px 3px 0 rgba(0,0,0,.15);\\n                    background-color: \").concat(getColor(), \";\\n                    margin: 0px auto;\\n                    border-radius: \").concat(getRadius(), \";\\n                    display: flex;\\n                    animation: SlideInOut \").concat(props.duration, \"s ease-in-out;\\n                }\\n            \")));\n};\n\nexport var snackbar = {\n  remove: function remove() {\n    var snackbarContainer = document.getElementById('rui-snackbar-container');\n    if (snackbarContainer) unmountComponentAtNode(snackbarContainer);\n    snackbar.currentToast = false;\n\n    if (snackbar.timeout) {\n      clearTimeout(snackbar.timeout);\n      snackbar.timeout = null;\n    }\n  },\n  currentToast: false,\n  timeout: null,\n\n  /**\n   * Snackbar options description\n   * @typedef {Object} SnackbarOptions\n   * @property {string} type success | error | info\n   * @property {string} borderType tile | rounded\n   * @property {boolean} dark\n   * @property {any} controls\n   * @property {number} duration\n   */\n\n  /**\n   * message function description\n   * @param {string} message\n   * @param {SnackbarOptions | null} options\n   */\n  message: function message(_message) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var duration = 5;\n\n    if (options) {\n      if (options.duration) duration = options.duration;\n    }\n\n    if (snackbar.currentToast) snackbar.remove();\n    var trasitionPercentage = 0.3 * (100 / duration);\n    render( /*#__PURE__*/React.createElement(SnackbarItem, {\n      message: _message,\n      slideIn: true,\n      borderType: options === null || options === void 0 ? void 0 : options.borderType,\n      type: options === null || options === void 0 ? void 0 : options.type,\n      dark: options === null || options === void 0 ? void 0 : options.dark,\n      controls: options === null || options === void 0 ? void 0 : options.controls,\n      transitionPercentage: trasitionPercentage,\n      duration: duration\n    }), document.getElementById('rui-snackbar-container'));\n    snackbar.currentToast = true;\n    snackbar.timeout = setTimeout(snackbar.remove, duration * 1000);\n  }\n};","map":{"version":3,"sources":["/home/yobi/Desktop/testFinal/node_modules/@assenti/rui-components/lib/snackbar/index.js"],"names":["React","render","unmountComponentAtNode","SnackbarItem","props","getColor","type","dark","getRadius","borderType","createElement","className","concat","trim","message","controls","jsx","transitionPercentage","duration","snackbar","remove","snackbarContainer","document","getElementById","currentToast","timeout","clearTimeout","_message","options","arguments","length","undefined","trasitionPercentage","slideIn","setTimeout"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { render, unmountComponentAtNode } from 'react-dom';\n\nvar SnackbarItem = function SnackbarItem(props) {\n  var getColor = function getColor() {\n    if (props.type === 'success') return '#1aaa55';else if (props.type === 'error') return '#f44336';else if (props.type === 'info') return '#42a5f5';else return props.dark ? '#ddd' : '#3d3d3d';\n  };\n\n  var getRadius = function getRadius() {\n    if (props.borderType === 'rounded') return '60px';\n    if (props.borderType === 'tile') return '0';else return '4px';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rui-snackbar-message-container\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rui-snackbar \".concat(props.type ? props.type : '').trim()\n  }, props.message, props.controls), /*#__PURE__*/React.createElement(\"style\", {\n    jsx: \"true\"\n  }, \"\\n                @keyframes SlideInOut {\\n                    0%{\\n                        transform: translateY(0);\\n                        opacity: .3;\\n                    }\\n                    \".concat(props.transitionPercentage, \"% {\\n                        transform: translateY(-20px);\\n                        opacity: 1;\\n                    }\\n                    \").concat(100 - props.transitionPercentage, \"% {\\n                        transform: translateY(-20px);\\n                        opacity: 1;\\n                    }\\n                    100% {\\n                        transform: translateY(0px);\\n                        opacity: .3;\\n                    }\\n                }\\n                @media (max-width: 529px) {\\n                    .rui-snackbar-message-container {\\n                        max-width: 90%;\\n                        width: 90%;\\n                    }\\n                }\\n                .rui-snackbar-container {\\n                    position: fixed;\\n                    width: 100%;\\n                    bottom: 16px;\\n                    left: 0px;\\n                    z-index: 9999;\\n                }\\n                .rui-snackbar {\\n                    display: flex;\\n                    align-items: center;\\n                    justify-content: \").concat(props.controls ? 'space-between' : 'center', \";\\n                    flex: 1;\\n                    padding: 0 15px;\\n                    border-radius: \").concat(getRadius(), \";\\n                    font-size: 15px;\\n                    min-height: 45px;\\n                }\\n                .rui-snackbar > button, div, span, i {\\n                    margin-top: 0;\\n                    margin-bottom: 0;\\n                }\\n                .rui-snackbar-message-container {\\n                    color: \").concat(props.dark ? '#000' : '#fff', \";\\n                    max-width: 350px;\\n                    box-shadow: 0 1px 3px 0 rgba(0,0,0,.15);\\n                    background-color: \").concat(getColor(), \";\\n                    margin: 0px auto;\\n                    border-radius: \").concat(getRadius(), \";\\n                    display: flex;\\n                    animation: SlideInOut \").concat(props.duration, \"s ease-in-out;\\n                }\\n            \")));\n};\n\nexport var snackbar = {\n  remove: function remove() {\n    var snackbarContainer = document.getElementById('rui-snackbar-container');\n    if (snackbarContainer) unmountComponentAtNode(snackbarContainer);\n    snackbar.currentToast = false;\n\n    if (snackbar.timeout) {\n      clearTimeout(snackbar.timeout);\n      snackbar.timeout = null;\n    }\n  },\n  currentToast: false,\n  timeout: null,\n\n  /**\n   * Snackbar options description\n   * @typedef {Object} SnackbarOptions\n   * @property {string} type success | error | info\n   * @property {string} borderType tile | rounded\n   * @property {boolean} dark\n   * @property {any} controls\n   * @property {number} duration\n   */\n\n  /**\n   * message function description\n   * @param {string} message\n   * @param {SnackbarOptions | null} options\n   */\n  message: function message(_message) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    var duration = 5;\n\n    if (options) {\n      if (options.duration) duration = options.duration;\n    }\n\n    if (snackbar.currentToast) snackbar.remove();\n    var trasitionPercentage = 0.3 * (100 / duration);\n    render( /*#__PURE__*/React.createElement(SnackbarItem, {\n      message: _message,\n      slideIn: true,\n      borderType: options === null || options === void 0 ? void 0 : options.borderType,\n      type: options === null || options === void 0 ? void 0 : options.type,\n      dark: options === null || options === void 0 ? void 0 : options.dark,\n      controls: options === null || options === void 0 ? void 0 : options.controls,\n      transitionPercentage: trasitionPercentage,\n      duration: duration\n    }), document.getElementById('rui-snackbar-container'));\n    snackbar.currentToast = true;\n    snackbar.timeout = setTimeout(snackbar.remove, duration * 1000);\n  }\n};"]},"metadata":{},"sourceType":"module"}