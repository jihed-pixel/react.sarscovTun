{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Icon } from '../index';\n\nvar InputField = function InputField(props) {\n  var input = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      focus = _useState2[0],\n      setFocus = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isChanged = _useState4[0],\n      setIsChanged = _useState4[1];\n\n  var _useState5 = useState(props.type === 'password' ? true : false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isPassword = _useState6[0],\n      setIsPassword = _useState6[1];\n\n  var getInputColor = function getInputColor() {\n    if (props.required) {\n      if (isChanged && !props.value) {\n        return 'error';\n      } else {\n        return props.color ? props.color : 'primary';\n      }\n    } else {\n      return props.color ? props.color : 'primary';\n    }\n  };\n\n  var inputFieldClass = function inputFieldClass() {\n    var result = '';\n    var className = {\n      input: 'rui-input-field',\n      whiteBackground: props.whiteBackground ? 'white-background' : '',\n      size: props.size ? props.size : '',\n      lifted: props.lifted ? 'lifted' : '',\n      borderType: props.borderType ? props.borderType : '',\n      color: getInputColor(),\n      disabled: props.disabled ? 'disabled' : '',\n      dark: props.dark ? 'dark' : '',\n      className: props.className ? props.className : ''\n    };\n\n    for (var key in className) {\n      if (className[key]) result += className[key] + ' ';\n    }\n\n    return result.trim();\n  };\n\n  var handleFocus = function handleFocus(e) {\n    if (props.onFocus) props.onFocus(e);\n    setFocus(true);\n  };\n\n  var handleBlur = function handleBlur(e) {\n    if (e.currentTarget === e.target) {\n      if (props.onBlur) props.onBlur(e);\n      setFocus(false);\n    }\n  };\n\n  var handleClear = function handleClear() {\n    setFocus(false);\n    props.onClear();\n    setIsChanged(false);\n  };\n\n  var handleChange = function handleChange(e) {\n    if (props.onChange) {\n      setIsChanged(true);\n\n      if (props.uppercase) {\n        e.target.value = e.target.value.toUpperCase();\n      }\n\n      props.onChange(e);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(e) {\n    if (props.onEnter) {\n      if (e.key === 'Enter') {\n        props.onEnter();\n      }\n    }\n\n    if (props.onKeyUp) {\n      props.onKeyUp(e);\n    }\n  };\n\n  var getHintColor = function getHintColor() {\n    if (props.hintColor) {\n      return \"rui-input-field__hint \".concat(props.hintColor);\n    } else {\n      if (props.required) {\n        if (isChanged && !props.value) {\n          return 'rui-input-field__hint error';\n        } else {\n          return 'rui-input-field__hint';\n        }\n      } else {\n        return 'rui-input-field__hint';\n      }\n    }\n  };\n\n  var getInputType = function getInputType() {\n    if (props.type === 'password') {\n      return isPassword ? 'password' : 'text';\n    } else if (props.type === 'number') {\n      return 'number';\n    } else if (props.type === 'email') {\n      return 'email';\n    } else {\n      return 'text';\n    }\n  };\n\n  var handlePassTypeChange = function handlePassTypeChange(e) {\n    setIsPassword(!isPassword);\n  };\n\n  useEffect(function () {\n    if (props.autoFocus) input.current.focus();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: inputFieldClass(),\n    style: props.style\n  }, props.label ? /*#__PURE__*/React.createElement(\"label\", {\n    className: focus ? 'active' : '',\n    onClick: function onClick() {\n      return input.current.focus();\n    }\n  }, props.required ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-error\"\n  }, \"*\") : '', \" \", props.label) : '', /*#__PURE__*/React.createElement(\"div\", {\n    className: focus ? 'rui-input-container focus' : 'rui-input-container'\n  }, props.prefix ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"rui-input-prefix\"\n  }, props.prefix) : '', /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      paddingLeft: props.prefix ? 0 : '',\n      paddingRight: props.suffix ? 0 : ''\n    },\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: input,\n    tabIndex: props.tabIndex,\n    readOnly: props.readOnly || !props.onChange ? true : false,\n    disabled: props.disabled,\n    required: props.required,\n    autoComplete: props.autoComplete ? '' : 'off',\n    name: props.name,\n    maxLength: props.maxLength,\n    minLength: props.minLength,\n    min: props.min,\n    max: props.max,\n    step: props.step,\n    value: props.value,\n    onKeyUp: handleKeyUp,\n    onKeyDown: props.onKeyDown,\n    placeholder: props.placeholder,\n    onChange: handleChange,\n    type: getInputType()\n  }), props.value && props.clearable ? /*#__PURE__*/React.createElement(Icon, {\n    name: \"close\",\n    onClick: function onClick() {\n      return props.onClear ? handleClear() : {};\n    },\n    className: \"rui-input-clear\"\n  }) : '', props.suffix ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"rui-input-suffix\"\n  }, props.suffix) : props.type === 'password' ? /*#__PURE__*/React.createElement(Icon, {\n    className: \"rui-input-clear\",\n    color: props.dark ? 'lightgray' : '',\n    name: isPassword ? 'eye-off' : 'eye',\n    onClick: handlePassTypeChange\n  }) : ''), props.hint ? /*#__PURE__*/React.createElement(\"div\", {\n    className: getHintColor()\n  }, props.hint) : '');\n};\n\nexport default InputField;","map":{"version":3,"sources":["/home/jihed/Bureau/projects/tunisia1 (copie)/node_modules/@assenti/rui-components/lib/input/index.js"],"names":["_slicedToArray","React","useRef","useState","useEffect","Icon","InputField","props","input","_useState","_useState2","focus","setFocus","_useState3","_useState4","isChanged","setIsChanged","_useState5","type","_useState6","isPassword","setIsPassword","getInputColor","required","value","color","inputFieldClass","result","className","whiteBackground","size","lifted","borderType","disabled","dark","key","trim","handleFocus","e","onFocus","handleBlur","currentTarget","target","onBlur","handleClear","onClear","handleChange","onChange","uppercase","toUpperCase","handleKeyUp","onEnter","onKeyUp","getHintColor","hintColor","concat","getInputType","handlePassTypeChange","autoFocus","current","createElement","style","label","onClick","prefix","paddingLeft","paddingRight","suffix","ref","tabIndex","readOnly","autoComplete","name","maxLength","minLength","min","max","step","onKeyDown","placeholder","clearable","hint"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Icon } from '../index';\n\nvar InputField = function InputField(props) {\n  var input = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      focus = _useState2[0],\n      setFocus = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isChanged = _useState4[0],\n      setIsChanged = _useState4[1];\n\n  var _useState5 = useState(props.type === 'password' ? true : false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isPassword = _useState6[0],\n      setIsPassword = _useState6[1];\n\n  var getInputColor = function getInputColor() {\n    if (props.required) {\n      if (isChanged && !props.value) {\n        return 'error';\n      } else {\n        return props.color ? props.color : 'primary';\n      }\n    } else {\n      return props.color ? props.color : 'primary';\n    }\n  };\n\n  var inputFieldClass = function inputFieldClass() {\n    var result = '';\n    var className = {\n      input: 'rui-input-field',\n      whiteBackground: props.whiteBackground ? 'white-background' : '',\n      size: props.size ? props.size : '',\n      lifted: props.lifted ? 'lifted' : '',\n      borderType: props.borderType ? props.borderType : '',\n      color: getInputColor(),\n      disabled: props.disabled ? 'disabled' : '',\n      dark: props.dark ? 'dark' : '',\n      className: props.className ? props.className : ''\n    };\n\n    for (var key in className) {\n      if (className[key]) result += className[key] + ' ';\n    }\n\n    return result.trim();\n  };\n\n  var handleFocus = function handleFocus(e) {\n    if (props.onFocus) props.onFocus(e);\n    setFocus(true);\n  };\n\n  var handleBlur = function handleBlur(e) {\n    if (e.currentTarget === e.target) {\n      if (props.onBlur) props.onBlur(e);\n      setFocus(false);\n    }\n  };\n\n  var handleClear = function handleClear() {\n    setFocus(false);\n    props.onClear();\n    setIsChanged(false);\n  };\n\n  var handleChange = function handleChange(e) {\n    if (props.onChange) {\n      setIsChanged(true);\n\n      if (props.uppercase) {\n        e.target.value = e.target.value.toUpperCase();\n      }\n\n      props.onChange(e);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(e) {\n    if (props.onEnter) {\n      if (e.key === 'Enter') {\n        props.onEnter();\n      }\n    }\n\n    if (props.onKeyUp) {\n      props.onKeyUp(e);\n    }\n  };\n\n  var getHintColor = function getHintColor() {\n    if (props.hintColor) {\n      return \"rui-input-field__hint \".concat(props.hintColor);\n    } else {\n      if (props.required) {\n        if (isChanged && !props.value) {\n          return 'rui-input-field__hint error';\n        } else {\n          return 'rui-input-field__hint';\n        }\n      } else {\n        return 'rui-input-field__hint';\n      }\n    }\n  };\n\n  var getInputType = function getInputType() {\n    if (props.type === 'password') {\n      return isPassword ? 'password' : 'text';\n    } else if (props.type === 'number') {\n      return 'number';\n    } else if (props.type === 'email') {\n      return 'email';\n    } else {\n      return 'text';\n    }\n  };\n\n  var handlePassTypeChange = function handlePassTypeChange(e) {\n    setIsPassword(!isPassword);\n  };\n\n  useEffect(function () {\n    if (props.autoFocus) input.current.focus();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: inputFieldClass(),\n    style: props.style\n  }, props.label ? /*#__PURE__*/React.createElement(\"label\", {\n    className: focus ? 'active' : '',\n    onClick: function onClick() {\n      return input.current.focus();\n    }\n  }, props.required ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-error\"\n  }, \"*\") : '', \" \", props.label) : '', /*#__PURE__*/React.createElement(\"div\", {\n    className: focus ? 'rui-input-container focus' : 'rui-input-container'\n  }, props.prefix ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"rui-input-prefix\"\n  }, props.prefix) : '', /*#__PURE__*/React.createElement(\"input\", {\n    style: {\n      paddingLeft: props.prefix ? 0 : '',\n      paddingRight: props.suffix ? 0 : ''\n    },\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: input,\n    tabIndex: props.tabIndex,\n    readOnly: props.readOnly || !props.onChange ? true : false,\n    disabled: props.disabled,\n    required: props.required,\n    autoComplete: props.autoComplete ? '' : 'off',\n    name: props.name,\n    maxLength: props.maxLength,\n    minLength: props.minLength,\n    min: props.min,\n    max: props.max,\n    step: props.step,\n    value: props.value,\n    onKeyUp: handleKeyUp,\n    onKeyDown: props.onKeyDown,\n    placeholder: props.placeholder,\n    onChange: handleChange,\n    type: getInputType()\n  }), props.value && props.clearable ? /*#__PURE__*/React.createElement(Icon, {\n    name: \"close\",\n    onClick: function onClick() {\n      return props.onClear ? handleClear() : {};\n    },\n    className: \"rui-input-clear\"\n  }) : '', props.suffix ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"rui-input-suffix\"\n  }, props.suffix) : props.type === 'password' ? /*#__PURE__*/React.createElement(Icon, {\n    className: \"rui-input-clear\",\n    color: props.dark ? 'lightgray' : '',\n    name: isPassword ? 'eye-off' : 'eye',\n    onClick: handlePassTypeChange\n  }) : ''), props.hint ? /*#__PURE__*/React.createElement(\"div\", {\n    className: getHintColor()\n  }, props.hint) : '');\n};\n\nexport default InputField;"]},"metadata":{},"sourceType":"module"}