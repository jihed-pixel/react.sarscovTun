{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _JSONNestedNode = _interopRequireDefault(require(\"./JSONNestedNode\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n} // Returns the \"n Items\" string for this node,\n// generating and caching it if it hasn't been created yet.\n\n\nfunction createItemString(data) {\n  return \"\".concat(data.length, \" \").concat(data.length !== 1 ? 'items' : 'item');\n} // Configures <JSONNestedNode> to render an Array\n\n\nvar JSONArrayNode = function JSONArrayNode(_ref) {\n  var data = _ref.data,\n      props = _objectWithoutProperties(_ref, [\"data\"]);\n\n  return /*#__PURE__*/_react[\"default\"].createElement(_JSONNestedNode[\"default\"], _extends({}, props, {\n    data: data,\n    nodeType: \"Array\",\n    nodeTypeIndicator: \"[]\",\n    createItemString: createItemString,\n    expandable: data.length > 0\n  }));\n};\n\nJSONArrayNode.propTypes = {\n  data: _propTypes[\"default\"].array\n};\nvar _default = JSONArrayNode;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../src/JSONArrayNode.tsx"],"names":["data","JSONArrayNode","props","PropTypes","array"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,eAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,kBAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAGA;AACA;;;AACA,SAAA,gBAAA,CAAA,IAAA,EAAqC;AACnC,SAAA,GAAA,MAAA,CAAWA,IAAD,CAAV,MAAA,EAAA,GAAA,EAAA,MAAA,CACGA,IAAD,CAAA,MAACA,KAAD,CAACA,GAAD,OAACA,GADH,MAAA,CAAA;AAGD,C,CAOD;;;AACA,IAAMC,aAA6C,GAAG,SAAhDA,aAAgD,CAAA,IAAA,EAAA;AAAA,MAAGD,IAAH,GAAA,IAAA,CAAA,IAAA;AAAA,MAAYE,KAAZ,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;;AAAA,SAAA,aACpD,MAAA,CAAA,SAAA,CAAA,CAAA,aAAA,CAAC,eAAA,CAAD,SAAC,CAAD,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEE,IAAA,IAAI,EAFN,IAAA;AAGE,IAAA,QAAQ,EAHV,OAAA;AAIE,IAAA,iBAAiB,EAJnB,IAAA;AAKE,IAAA,gBAAgB,EALlB,gBAAA;AAME,IAAA,UAAU,EAAEF,IAAI,CAAJA,MAAAA,GAAc;AAN5B,GAAA,CAAA,CADoD;AAAtD,CAAA;;AAWAC,aAAa,CAAbA,SAAAA,GAA0B;AACxBD,EAAAA,IAAI,EAAEG,UAAAA,CAAAA,SAAAA,CAAAA,CAAUC;AADQ,CAA1BH;eAIeA,a","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport JSONNestedNode from './JSONNestedNode';\nimport { CircularPropsPassedThroughJSONNode } from './types';\n\n// Returns the \"n Items\" string for this node,\n// generating and caching it if it hasn't been created yet.\nfunction createItemString(data: any) {\n  return `${(data as unknown[]).length} ${\n    (data as unknown[]).length !== 1 ? 'items' : 'item'\n  }`;\n}\n\ninterface Props extends CircularPropsPassedThroughJSONNode {\n  data: any;\n  nodeType: string;\n}\n\n// Configures <JSONNestedNode> to render an Array\nconst JSONArrayNode: React.FunctionComponent<Props> = ({ data, ...props }) => (\n  <JSONNestedNode\n    {...props}\n    data={data}\n    nodeType=\"Array\"\n    nodeTypeIndicator=\"[]\"\n    createItemString={createItemString}\n    expandable={data.length > 0}\n  />\n);\n\nJSONArrayNode.propTypes = {\n  data: PropTypes.array,\n};\n\nexport default JSONArrayNode;\n"]},"metadata":{},"sourceType":"script"}