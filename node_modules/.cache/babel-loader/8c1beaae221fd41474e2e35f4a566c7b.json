{"ast":null,"code":"import apiMedicalService from \"./apiMedicalService\";\nexport const ACTION_TYPES = {\n  LOGIN: \"LOGIN\",\n  LOGINADMIN: \"LOGINADMIN\",\n  LOGOUT: \"LOGOUT\",\n  ADD_PATIENT: \"ADD_PATIENT\",\n  ALL_PATIENT: \"ALL_PATIENT\",\n  SEARCH_PATIENT: \"SEARCH_PATIENT\",\n  SEARCH_PATIENT1: \"SEARCH_PATIENT1\",\n  ADD_PATIENT: \"ADD_PATIENT\",\n  HABITUDES_DE_VIE_PATIENT: \"HABITUDES_DE_VIE_PATIENT\",\n  INFOS_GENERALES: \"INFOS_GENERALES\",\n  ANTECEDENTS_MEDICAUX: \"ANTECEDENTS_MEDICAUX\",\n  GET_ALL_ANTECEDENTS_MEDICAUX: \"GET_ALL_ANTECEDENTS_MEDICAUX\",\n  REMOVE_ANTECEDENT_MEDICAL: \"REMOVE_ANTECEDENT_MEDICAL\",\n  REMOVE_P_EXPO_RISQUE: \"REMOVE_P_EXPO_RISQUE\",\n  REMOVE_P_ANTECEDENT_MEDICAL: \"REMOVE_P_ANTECEDENT_MEDICAL\",\n  REMOVE_P_INFOS_GENERALES: \"REMOVE_P_INFOSGENERALES\",\n  REMOVE_P_HABITUDES_DE_VIE: \"REMOVE_P_HABITUDES_DE_VIE\",\n  REMOVE_P_CONF_DIAGS: \"REMOVE_P_CONF_DIAGS\",\n  REMOVE_P_EXAM_BIO: \"REMOVE_P_EXAM_BIO\",\n  REMOVE_P_CARAC_CLINIQUES: \"REMOVE_P_CARAC_CLINIQUES\",\n  REMOVE_P_ADMISSIONS: \"REMOVE_P_ADMISSIONS\",\n  REMOVE_P_EXAMEN_CLI: \"REMOVE_P_EXAMEN_CLI\",\n  REMOVE_P_EXAM_RADIO_PARA_CLI: \"REMOVE_P_EXAM_RADIO_PARA_CLI\",\n  REMOVE_P_TRAITEMENT: \"REMOVE_P_TRAITEMENT\",\n  REMOVE_P_EVOLUATION_QUO: \"REMOVE_P_EVOLUATION_QUO\",\n  REMOVE_P_EVALUATION_FINALE: \"REMOVE_P_EVALUATION_FINALE\",\n  ADD_DIAGNOSTIC: \"ADD_DIAGNOSTIC\",\n  ADD_EXPOSITION: \"ADD_EXPOSITION\",\n  ADD_EXPOSITION1: \"ADD_EXPOSITION1\",\n  GET_ALL_DIAGNOSTICS: \"GET_ALL_DIAGNOSTICS\",\n  SEARCH_DIAGNOSTIC: \"SEARCH_DIAGNOSTIC\",\n  ADD_CONF_DIAG: \"ADD_CONF_DIAG\",\n  ADD_ADMISSION: \"ADD_ADMISSION\",\n  ADD_CARAC_CLINIQUES: \"ADD_CARAC_CLINIQUES\",\n  ADD_EXAM_CLI: \"ADD_EXAM_CLI\",\n  ADD_EXAM_RADIO_PARA_CLI: \"ADD_EXAM_RADIO_PARA_CLI\",\n  ADD_EVALUATION_FINALE: \"ADD_EVALUATION_FINALE\",\n  ADD_EXAM_BIO: \"ADD_EXAM_BIO\",\n  ADD_TRAITMENT: \"ADD_TRAITMENT\",\n  GET_TRAITMENT: \"GET_TRAITMENT\",\n  ADD_EVOLUTION: \"ADD_EVOLUTION\",\n  GET_EVOLUTION: \"GET_EVOLUTION\"\n};\nexport const getEvolution = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().getEvolution(cin, values).then(resposne => {\n    dispatch({\n      type: ACTION_TYPES.GET_EVOLUTION,\n      payload: resposne.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const addEvolution = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addEvolution(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_EVOLUTION,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const getTraitment = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().getTraitment(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.GET_TRAITMENT,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const addTraitment = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addTraitment(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_TRAITMENT,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const addExamBio = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addExamBio(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_EXAM_BIO,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const addEvaluationFinale = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addEvaluationFinale(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_EVALUATION_FINALE,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const addExamRadioParaCli = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addExamRadioParaCli(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_EXAM_RADIO_PARA_CLI,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const addExamCli = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addExamCli(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_EXAM_CLI,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const addCaracCliniques = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addCracCliniques(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_CARAC_CLINIQUES,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const addAdmission = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addAdmission(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_ADMISSION,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const addConfDiag = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addConfDiag(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_CONF_DIAG,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const searchDiagnostic = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().searchDiagnostic(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.SEARCH_DIAGNOSTIC,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const getAllDiagnostics = cin => dispatch => {\n  apiMedicalService.medicalService().getAllDiagnostics(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.GET_ALL_DIAGNOSTICS,\n      payload: response.data\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const addExposition = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addExposition(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_EXPOSITION,\n      payload: response.data\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const addExposition1 = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addExposition1(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_EXPOSITION1,\n      payload: response.data\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const addDiagnostic = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().addDiagnostic(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_DIAGNOSTIC,\n      payload: response.data\n    });\n    console.log(response.data);\n    if (response.data == \"You have already added a diagnostic in the same day\") localStorage.setItem(\"addDiagnostic\", response.data);else localStorage.setItem(\"addDiagnostic\", JSON.stringify(null));\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const removeAntecedentMedical = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().removeAntecedentMedical(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_ANTECEDENT_MEDICAL,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepExpoRisque = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().removepExpoRisque(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_EXPO_RISQUE,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepAntecedentMedical = cin => dispatch => {\n  apiMedicalService.medicalService().removepAntecedentMedical(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_ANTECEDENT_MEDICAL,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepInfosGenerales = cin => dispatch => {\n  apiMedicalService.medicalService().removepInfosGenerales(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_INFOS_GENERALES,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepHabitudesDeVie = cin => dispatch => {\n  apiMedicalService.medicalService().removepHabitudesDeVie(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_HABITUDES_DE_VIE,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepConfDiags = cin => dispatch => {\n  apiMedicalService.medicalService().removepConfDiags(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_CONF_DIAGS,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepExamBio = cin => dispatch => {\n  apiMedicalService.medicalService().removepExamBio(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_EXAM_BIO,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepCaracCliniques = cin => dispatch => {\n  apiMedicalService.medicalService().removepCaracCliniques(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_CARAC_CLINIQUES,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepAdmissions = cin => dispatch => {\n  apiMedicalService.medicalService().removepAdmissions(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_ADMISSIONS,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepExamenCli = cin => dispatch => {\n  apiMedicalService.medicalService().removepExamenCli(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_EXAMEN_CLI,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepExamRadio_ParaCli = cin => dispatch => {\n  apiMedicalService.medicalService().removepExamRadio_ParaCli(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_EXAM_RADIO_PARA_CLI,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepTraitement = cin => dispatch => {\n  apiMedicalService.medicalService().removepTraitement(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_TRAITEMENT,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepEvoluationQuo = cin => dispatch => {\n  apiMedicalService.medicalService().removepEvoluationQuo(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_EVOLUATION_QUO,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const removepEvaluationFinale = cin => dispatch => {\n  apiMedicalService.medicalService().removepEvaluationFinale(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.REMOVE_P_EVALUATION_FINALE,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const getAllAntecedentsMedicaux = cin => dispatch => {\n  apiMedicalService.medicalService().allAntecedentsMedicaux(cin).then(response => {\n    dispatch({\n      type: ACTION_TYPES.GET_ALL_ANTECEDENTS_MEDICAUX,\n      payload: response.data\n    });\n    console.log(response.data);\n  }).catch(err => console.log(err));\n};\nexport const antecedentsMedicaux = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().antecedentsMedicaux(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ANTECEDENTS_MEDICAUX,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const infosGenerales = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().infosGenerales(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.INFOS_GENERALES,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const habitudesDeViePatient = (cin, values) => dispatch => {\n  apiMedicalService.medicalService().habitudesDeViePatient(cin, values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.HABITUDES_DE_VIE_PATIENT,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const searchPatient = (search, search1) => dispatch => {\n  apiMedicalService.medicalService().searchPatient(search, search1).then(response => {\n    dispatch({\n      type: ACTION_TYPES.SEARCH_PATIENT,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const searchPatient1 = search => dispatch => {\n  apiMedicalService.medicalService().searchPatient1(search).then(response => {\n    dispatch({\n      type: ACTION_TYPES.SEARCH_PATIENT1,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const allPatient = () => dispatch => {\n  apiMedicalService.medicalService().allPatient().then(response => {\n    dispatch({\n      type: ACTION_TYPES.ALL_PATIENT,\n      payload: response.data\n    });\n  }).catch(err => console.log(err));\n};\nexport const login = values => dispatch => {\n  apiMedicalService.medicalService().login(values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.LOGIN,\n      payload: response.data\n    });\n    const loggedUser = response.data;\n\n    if (loggedUser == \"\") {\n      localStorage.setItem(\"loggedUser\", JSON.stringify(null));\n    } else if (loggedUser == \"Username or/and password is/are incorrect\") {\n      localStorage.setItem(\"loggedUser\", JSON.stringify(null));\n    } else {\n      localStorage.setItem(\"loggedUser\", JSON.stringify(loggedUser));\n    }\n  }).catch(err => console.log(err));\n};\nexport const loginAdmin = values => dispatch => {\n  apiMedicalService.medicalService().loginAdmin(values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.LOGINADMIN,\n      payload: response.data\n    });\n    const loggedUserAdmin = response.data;\n\n    if (loggedUserAdmin == \"\") {\n      localStorage.setItem(\"loggedUserAdmin\", JSON.stringify(null));\n    } else if (loggedUserAdmin == \"Username or/and password is/are incorrect\") {\n      localStorage.setItem(\"loggedUserAdmin\", JSON.stringify(null));\n    } else {\n      localStorage.setItem(\"loggedUserAdmin\", JSON.stringify(loggedUserAdmin));\n    }\n  }).catch(err => console.log(err));\n};\nexport const logout = () => dispatch => {\n  apiMedicalService.medicalService().logout().then(response => {\n    localStorage.setItem(\"loggedUser\", JSON.stringify(\"Try to login\"));\n    dispatch({\n      type: ACTION_TYPES.LOGOUT,\n      payload: JSON.stringify(null)\n    });\n  }).catch(err => console.log(err));\n};\nexport const addPatient = values => dispatch => {\n  apiMedicalService.medicalService().addPatient(values).then(response => {\n    dispatch({\n      type: ACTION_TYPES.ADD_PATIENT,\n      payload: response.data\n    });\n    const addPatientMessage = response.data;\n    if (addPatientMessage == \"Cin or/and matricule already existed\") localStorage.setItem(\"addPatientMessage\", \"Cin or/and matricule already existed\");else {\n      localStorage.setItem(\"addPatientMessage\", JSON.stringify(null));\n    }\n    ;\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/home/yobi/Desktop/testFinal/src/Actions/medicalService.js"],"names":["apiMedicalService","ACTION_TYPES","LOGIN","LOGINADMIN","LOGOUT","ADD_PATIENT","ALL_PATIENT","SEARCH_PATIENT","SEARCH_PATIENT1","HABITUDES_DE_VIE_PATIENT","INFOS_GENERALES","ANTECEDENTS_MEDICAUX","GET_ALL_ANTECEDENTS_MEDICAUX","REMOVE_ANTECEDENT_MEDICAL","REMOVE_P_EXPO_RISQUE","REMOVE_P_ANTECEDENT_MEDICAL","REMOVE_P_INFOS_GENERALES","REMOVE_P_HABITUDES_DE_VIE","REMOVE_P_CONF_DIAGS","REMOVE_P_EXAM_BIO","REMOVE_P_CARAC_CLINIQUES","REMOVE_P_ADMISSIONS","REMOVE_P_EXAMEN_CLI","REMOVE_P_EXAM_RADIO_PARA_CLI","REMOVE_P_TRAITEMENT","REMOVE_P_EVOLUATION_QUO","REMOVE_P_EVALUATION_FINALE","ADD_DIAGNOSTIC","ADD_EXPOSITION","ADD_EXPOSITION1","GET_ALL_DIAGNOSTICS","SEARCH_DIAGNOSTIC","ADD_CONF_DIAG","ADD_ADMISSION","ADD_CARAC_CLINIQUES","ADD_EXAM_CLI","ADD_EXAM_RADIO_PARA_CLI","ADD_EVALUATION_FINALE","ADD_EXAM_BIO","ADD_TRAITMENT","GET_TRAITMENT","ADD_EVOLUTION","GET_EVOLUTION","getEvolution","cin","values","dispatch","medicalService","then","resposne","type","payload","data","catch","err","console","log","addEvolution","response","getTraitment","addTraitment","addExamBio","addEvaluationFinale","addExamRadioParaCli","addExamCli","addCaracCliniques","addCracCliniques","addAdmission","addConfDiag","searchDiagnostic","getAllDiagnostics","addExposition","addExposition1","addDiagnostic","localStorage","setItem","JSON","stringify","removeAntecedentMedical","removepExpoRisque","removepAntecedentMedical","removepInfosGenerales","removepHabitudesDeVie","removepConfDiags","removepExamBio","removepCaracCliniques","removepAdmissions","removepExamenCli","removepExamRadio_ParaCli","removepTraitement","removepEvoluationQuo","removepEvaluationFinale","getAllAntecedentsMedicaux","allAntecedentsMedicaux","antecedentsMedicaux","infosGenerales","habitudesDeViePatient","searchPatient","search","search1","searchPatient1","allPatient","login","loggedUser","loginAdmin","loggedUserAdmin","logout","addPatient","addPatientMessage"],"mappings":"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","sourcesContent":["import apiMedicalService from \"./apiMedicalService\";\n\nexport const ACTION_TYPES = {\n  LOGIN: \"LOGIN\",\n  LOGINADMIN: \"LOGINADMIN\",\n  LOGOUT: \"LOGOUT\",\n  ADD_PATIENT: \"ADD_PATIENT\",\n  ALL_PATIENT:\"ALL_PATIENT\",\n  SEARCH_PATIENT: \"SEARCH_PATIENT\",\n  SEARCH_PATIENT1: \"SEARCH_PATIENT1\",\n  ADD_PATIENT:\"ADD_PATIENT\",\n  HABITUDES_DE_VIE_PATIENT: \"HABITUDES_DE_VIE_PATIENT\",\n  INFOS_GENERALES: \"INFOS_GENERALES\",\n  ANTECEDENTS_MEDICAUX: \"ANTECEDENTS_MEDICAUX\",\n  GET_ALL_ANTECEDENTS_MEDICAUX: \"GET_ALL_ANTECEDENTS_MEDICAUX\",\n  REMOVE_ANTECEDENT_MEDICAL: \"REMOVE_ANTECEDENT_MEDICAL\",\n  REMOVE_P_EXPO_RISQUE:\"REMOVE_P_EXPO_RISQUE\",\n  REMOVE_P_ANTECEDENT_MEDICAL: \"REMOVE_P_ANTECEDENT_MEDICAL\",\n  REMOVE_P_INFOS_GENERALES:\"REMOVE_P_INFOSGENERALES\",\n  REMOVE_P_HABITUDES_DE_VIE:\"REMOVE_P_HABITUDES_DE_VIE\",\n  REMOVE_P_CONF_DIAGS:\"REMOVE_P_CONF_DIAGS\",\n  REMOVE_P_EXAM_BIO:\"REMOVE_P_EXAM_BIO\",\n  REMOVE_P_CARAC_CLINIQUES:\"REMOVE_P_CARAC_CLINIQUES\",\n  REMOVE_P_ADMISSIONS:\"REMOVE_P_ADMISSIONS\",\n  REMOVE_P_EXAMEN_CLI:\"REMOVE_P_EXAMEN_CLI\",\n  REMOVE_P_EXAM_RADIO_PARA_CLI:\"REMOVE_P_EXAM_RADIO_PARA_CLI\",\n  REMOVE_P_TRAITEMENT:\"REMOVE_P_TRAITEMENT\",\n  REMOVE_P_EVOLUATION_QUO:\"REMOVE_P_EVOLUATION_QUO\",\n  REMOVE_P_EVALUATION_FINALE:\"REMOVE_P_EVALUATION_FINALE\",\n\n  ADD_DIAGNOSTIC: \"ADD_DIAGNOSTIC\",\n  ADD_EXPOSITION: \"ADD_EXPOSITION\",\n  ADD_EXPOSITION1: \"ADD_EXPOSITION1\",\n  GET_ALL_DIAGNOSTICS: \"GET_ALL_DIAGNOSTICS\",\n  SEARCH_DIAGNOSTIC: \"SEARCH_DIAGNOSTIC\",\n  ADD_CONF_DIAG: \"ADD_CONF_DIAG\",\n  ADD_ADMISSION: \"ADD_ADMISSION\",\n  ADD_CARAC_CLINIQUES: \"ADD_CARAC_CLINIQUES\",\n  ADD_EXAM_CLI: \"ADD_EXAM_CLI\",\n  ADD_EXAM_RADIO_PARA_CLI: \"ADD_EXAM_RADIO_PARA_CLI\",\n  ADD_EVALUATION_FINALE: \"ADD_EVALUATION_FINALE\",\n  ADD_EXAM_BIO: \"ADD_EXAM_BIO\",\n  ADD_TRAITMENT:\"ADD_TRAITMENT\",\n  GET_TRAITMENT:\"GET_TRAITMENT\",\n  ADD_EVOLUTION:\"ADD_EVOLUTION\",\n  GET_EVOLUTION:\"GET_EVOLUTION\"\n};\n\nexport const getEvolution=(cin,values)=>(dispatch)=>{\n  apiMedicalService\n  .medicalService()\n  .getEvolution(cin,values)\n . then(resposne=>{\n    dispatch({\n      type:ACTION_TYPES.GET_EVOLUTION,\n      payload:resposne.data\n    })\n  })\n  .catch(err=>console.log(err))\n}\n\nexport const addEvolution=(cin,values)=>(dispatch)=>{\n  apiMedicalService\n  .medicalService()\n  .addEvolution(cin,values)\n  .then((response)=>{\n    dispatch({\n      type:ACTION_TYPES.ADD_EVOLUTION,\n      payload:response.data\n    })\n  })\n  .catch(err=>console.log(err))\n}\n\nexport const getTraitment=(cin,values)=>(dispatch)=>{\n  apiMedicalService\n  .medicalService()\n  .getTraitment(cin,values)\n  .then((response)=>{\n    dispatch({\n      type:ACTION_TYPES.GET_TRAITMENT,\n      payload:response.data\n    })\n  })\n  .catch(err=>console.log(err))\n}\n\nexport const addTraitment=(cin,values)=>(dispatch)=>{\n  apiMedicalService\n  .medicalService()\n  .addTraitment(cin,values)\n  .then((response)=>{\n    dispatch({\n      type:ACTION_TYPES.ADD_TRAITMENT,\n      payload:response.data\n    })\n  })\n  .catch(err=>console.log(err))\n}\n\nexport const addExamBio = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addExamBio(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_EXAM_BIO,\n        payload: response.data\n\n      })\n    })\n    .catch(err=>console.log(err))\n\n}\nexport const addEvaluationFinale = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addEvaluationFinale(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_EVALUATION_FINALE,\n        payload: response.data\n      })\n    })\n    .catch(err => console.log(err))\n\n}\n\nexport const addExamRadioParaCli = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addExamRadioParaCli(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_EXAM_RADIO_PARA_CLI,\n        payload: response.data\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const addExamCli = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addExamCli(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_EXAM_CLI,\n        payload: response.data\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const addCaracCliniques = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addCracCliniques(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_CARAC_CLINIQUES,\n        payload: response.data\n\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const addAdmission = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addAdmission(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_ADMISSION,\n        payload: response.data\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const addConfDiag = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addConfDiag(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_CONF_DIAG,\n        payload: response.data\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const searchDiagnostic = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .searchDiagnostic(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.SEARCH_DIAGNOSTIC,\n        payload: response.data\n      })\n    })\n    .catch(err => console.log(err))\n}\n\nexport const getAllDiagnostics = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .getAllDiagnostics(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.GET_ALL_DIAGNOSTICS,\n        payload: response.data\n      })\n    })\n    .catch(err => { console.log(err) })\n}\n\nexport const addExposition = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addExposition(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_EXPOSITION,\n        payload: response.data\n      })\n    })\n    .catch(err => { console.log(err) })\n}\n\nexport const addExposition1 = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addExposition1(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_EXPOSITION1,\n        payload: response.data\n      })\n    })\n    .catch(err => { console.log(err) })\n}\n\nexport const addDiagnostic = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addDiagnostic(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_DIAGNOSTIC,\n        payload: response.data\n      })\n      console.log(response.data)\n      if (response.data == \"You have already added a diagnostic in the same day\")\n        localStorage.setItem(\"addDiagnostic\", response.data)\n      else localStorage.setItem(\"addDiagnostic\", JSON.stringify(null))\n\n    })\n    .catch((err) => { console.log(err) })\n}\nexport const removeAntecedentMedical = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removeAntecedentMedical(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_ANTECEDENT_MEDICAL,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepExpoRisque = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepExpoRisque(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_EXPO_RISQUE,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepAntecedentMedical = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepAntecedentMedical(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_ANTECEDENT_MEDICAL,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepInfosGenerales = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepInfosGenerales(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_INFOS_GENERALES,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepHabitudesDeVie = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepHabitudesDeVie(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_HABITUDES_DE_VIE,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepConfDiags = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepConfDiags(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_CONF_DIAGS,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepExamBio = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepExamBio(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_EXAM_BIO,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepCaracCliniques = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepCaracCliniques(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_CARAC_CLINIQUES,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepAdmissions = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepAdmissions(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_ADMISSIONS,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepExamenCli = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepExamenCli(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_EXAMEN_CLI,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepExamRadio_ParaCli = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepExamRadio_ParaCli(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_EXAM_RADIO_PARA_CLI,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepTraitement = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepTraitement(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_TRAITEMENT,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepEvoluationQuo = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepEvoluationQuo(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_EVOLUATION_QUO,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const removepEvaluationFinale = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .removepEvaluationFinale(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.REMOVE_P_EVALUATION_FINALE,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const getAllAntecedentsMedicaux = (cin) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .allAntecedentsMedicaux(cin)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.GET_ALL_ANTECEDENTS_MEDICAUX,\n        payload: response.data\n      })\n      console.log(response.data)\n    }\n    )\n    .catch((err) => console.log(err))\n}\nexport const antecedentsMedicaux = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .antecedentsMedicaux(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ANTECEDENTS_MEDICAUX,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\n\nexport const infosGenerales = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .infosGenerales(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.INFOS_GENERALES,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const habitudesDeViePatient = (cin, values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .habitudesDeViePatient(cin, values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.HABITUDES_DE_VIE_PATIENT,\n        payload: response.data\n      })\n    })\n    .catch((err) => console.log(err))\n}\nexport const searchPatient = (search,search1) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .searchPatient(search,search1)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.SEARCH_PATIENT,\n        payload: response.data\n      });\n\n    })\n    .catch((err) => console.log(err))\n}\nexport const searchPatient1 = (search) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .searchPatient1(search)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.SEARCH_PATIENT1,\n        payload: response.data\n      });\n\n    })\n    .catch((err) => console.log(err))\n}\nexport const allPatient = () => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .allPatient()\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ALL_PATIENT,\n        payload: response.data\n      });\n\n    })\n    .catch((err) => console.log(err))\n}\nexport const login = (values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .login(values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.LOGIN,\n        payload: response.data,\n      });\n      const loggedUser = response.data;\n      if (loggedUser == \"\") {\n        localStorage.setItem(\"loggedUser\", JSON.stringify(null))\n      } else if (loggedUser == \"Username or/and password is/are incorrect\") {\n        localStorage.setItem(\"loggedUser\", JSON.stringify(null))\n\n      } else {\n        localStorage.setItem(\"loggedUser\", JSON.stringify(loggedUser))\n\n\n      }\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const loginAdmin = (values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .loginAdmin(values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.LOGINADMIN,\n        payload: response.data,\n      });\n      const loggedUserAdmin = response.data;\n      if (loggedUserAdmin == \"\") {\n        localStorage.setItem(\"loggedUserAdmin\", JSON.stringify(null))\n      } else if (loggedUserAdmin == \"Username or/and password is/are incorrect\") {\n        localStorage.setItem(\"loggedUserAdmin\", JSON.stringify(null))\n\n      } else {\n        localStorage.setItem(\"loggedUserAdmin\", JSON.stringify(loggedUserAdmin))\n\n\n      }\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const logout = () => (dispatch) => {\n  apiMedicalService.medicalService().logout().\n    then((response) => {\n      localStorage.setItem(\"loggedUser\", JSON.stringify(\"Try to login\"))\n      dispatch({\n        type: ACTION_TYPES.LOGOUT,\n        payload: JSON.stringify(null)\n      });\n\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const addPatient = (values) => (dispatch) => {\n  apiMedicalService\n    .medicalService()\n    .addPatient(values)\n    .then((response) => {\n      dispatch({\n        type: ACTION_TYPES.ADD_PATIENT,\n        payload: response.data,\n      });\n      const addPatientMessage = response.data\n      if (addPatientMessage == \"Cin or/and matricule already existed\")\n        localStorage.setItem(\"addPatientMessage\", \"Cin or/and matricule already existed\")\n      else {\n        localStorage.setItem(\"addPatientMessage\", JSON.stringify(null))\n\n      };\n\n    })\n    .catch((err) => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}