{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport { Icon, Tooltip } from '../index';\n\nvar CopyToClipboard = function CopyToClipboard(props) {\n  var _useState = useState(props.defaultText ? props.defaultText : 'Copy'),\n      _useState2 = _slicedToArray(_useState, 2),\n      tooltip = _useState2[0],\n      setTooltip = _useState2[1];\n\n  var handleClick = function handleClick() {\n    copyToClipboard(props.text);\n    setTooltip(\"\".concat(props.copiedText ? props.copiedText : 'Copied to clipboard'));\n    setTimeout(function () {\n      setTooltip(props.defaultText ? props.defaultText : 'Copy');\n    }, 700);\n  };\n\n  var copyToClipboard = function copyToClipboard(text) {\n    var el = document.createElement('textarea');\n    el.value = text;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n  };\n\n  var getColor = function getColor() {\n    if (props.color) {\n      return props.color;\n    } else {\n      if (props.dark) return '#fff';else return '';\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.noTooltip ? /*#__PURE__*/React.createElement(Icon, {\n    className: props.className ? \"cursor-pointer \".concat(props.className) : 'cursor-pointer',\n    size: props.size ? props.size : 16,\n    color: getColor(),\n    name: props.icon ? props.icon : 'content-copy',\n    onClick: handleClick\n  }) : /*#__PURE__*/React.createElement(Tooltip, {\n    tooltip: tooltip,\n    position: props.tooltipPosition\n  }, /*#__PURE__*/React.createElement(Icon, {\n    className: props.className ? \"cursor-pointer \".concat(props.className) : 'cursor-pointer',\n    size: props.size ? props.size : 16,\n    color: getColor(),\n    name: props.icon ? props.icon : 'content-copy',\n    onClick: handleClick\n  })));\n};\n\nexport default CopyToClipboard;","map":{"version":3,"sources":["/home/jihed/Bureau/projects/tunisia1 (copie)/node_modules/@assenti/rui-components/lib/copyToClipboard/index.js"],"names":["_slicedToArray","React","useState","Icon","Tooltip","CopyToClipboard","props","_useState","defaultText","_useState2","tooltip","setTooltip","handleClick","copyToClipboard","text","concat","copiedText","setTimeout","el","document","createElement","value","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","getColor","color","dark","Fragment","noTooltip","className","size","name","icon","onClick","tooltipPosition"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport { Icon, Tooltip } from '../index';\n\nvar CopyToClipboard = function CopyToClipboard(props) {\n  var _useState = useState(props.defaultText ? props.defaultText : 'Copy'),\n      _useState2 = _slicedToArray(_useState, 2),\n      tooltip = _useState2[0],\n      setTooltip = _useState2[1];\n\n  var handleClick = function handleClick() {\n    copyToClipboard(props.text);\n    setTooltip(\"\".concat(props.copiedText ? props.copiedText : 'Copied to clipboard'));\n    setTimeout(function () {\n      setTooltip(props.defaultText ? props.defaultText : 'Copy');\n    }, 700);\n  };\n\n  var copyToClipboard = function copyToClipboard(text) {\n    var el = document.createElement('textarea');\n    el.value = text;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n  };\n\n  var getColor = function getColor() {\n    if (props.color) {\n      return props.color;\n    } else {\n      if (props.dark) return '#fff';else return '';\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.noTooltip ? /*#__PURE__*/React.createElement(Icon, {\n    className: props.className ? \"cursor-pointer \".concat(props.className) : 'cursor-pointer',\n    size: props.size ? props.size : 16,\n    color: getColor(),\n    name: props.icon ? props.icon : 'content-copy',\n    onClick: handleClick\n  }) : /*#__PURE__*/React.createElement(Tooltip, {\n    tooltip: tooltip,\n    position: props.tooltipPosition\n  }, /*#__PURE__*/React.createElement(Icon, {\n    className: props.className ? \"cursor-pointer \".concat(props.className) : 'cursor-pointer',\n    size: props.size ? props.size : 16,\n    color: getColor(),\n    name: props.icon ? props.icon : 'content-copy',\n    onClick: handleClick\n  })));\n};\n\nexport default CopyToClipboard;"]},"metadata":{},"sourceType":"module"}