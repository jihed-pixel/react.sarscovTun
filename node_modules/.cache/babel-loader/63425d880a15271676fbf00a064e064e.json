{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport { Dropdown, InputField, List, Icon } from '../index';\nimport { strinfigyClassObject } from '../utils';\n\nvar AutoComplete = function AutoComplete(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  var className = {\n    btn: 'rui-autocomplete',\n    maxHeight: props.contentMaxHeight ? 'max-height' : '',\n    color: props.color && props.color !== 'default' ? props.color : 'primary',\n    className: props.className ? props.className : ''\n  };\n\n  var getItem = function getItem(item, lower) {\n    return props.itemKey ? lower ? item[props.itemKey].toLowerCase() : item[props.itemKey] : lower ? item.toLowerCase() : item;\n  };\n\n  var filtered = function filtered() {\n    if (search) {\n      return props.items.filter(function (item) {\n        return getItem(item, true).includes(search.toLowerCase());\n      });\n    } else {\n      return [];\n    }\n  };\n\n  var handleItemClick = function handleItemClick(item) {\n    setSearch(item);\n    setTimeout(function () {\n      setVisible(false);\n    });\n  };\n\n  var handleClear = function handleClear() {\n    if (props.onClear) {\n      props.onClear();\n      setSearch('');\n    }\n\n    setVisible(false);\n  };\n\n  var handleSuffix = function handleSuffix() {\n    if (props.loading) {\n      return /*#__PURE__*/React.createElement(Icon, {\n        name: \"loading\",\n        className: \"rui-autocomplete__loading loading\"\n      });\n    } else if (!props.loading && props.suffix) {\n      return props.suffix;\n    } else return null;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: strinfigyClassObject(className),\n    style: props.style\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    visible: visible,\n    width: props.width ? props.width : '',\n    closeManaged: true,\n    dark: props.dark,\n    contentMaxHeight: props.contentMaxHeight,\n    trigger: /*#__PURE__*/React.createElement(InputField, {\n      color: props.color,\n      dark: props.dark,\n      disabled: props.disabled || props.loading,\n      required: props.required,\n      readOnly: props.readOnly,\n      lifted: props.lifted,\n      borderType: props.borderType,\n      uppercase: props.uppercase,\n      whiteBackground: props.whiteBackground,\n      prefix: props.prefix,\n      suffix: handleSuffix(),\n      value: search,\n      size: props.size,\n      clearable: props.clearable,\n      onClear: handleClear,\n      onFocus: function onFocus() {\n        return !props.disabled ? setVisible(true) : {};\n      },\n      onBlur: function onBlur() {\n        return setVisible(false);\n      },\n      onChange: function onChange(e) {\n        return setSearch(e.target.value);\n      },\n      placeholder: props.placeholder,\n      label: props.label,\n      hintColor: props.hintColor\n    })\n  }, /*#__PURE__*/React.createElement(List, {\n    dark: props.dark,\n    size: props.size,\n    header: props.listHeader\n  }, filtered().map(function (item, index) {\n    return /*#__PURE__*/React.createElement(List.Item, {\n      key: index,\n      avatar: props.avatarKey,\n      avatarSize: props.avatarSize,\n      avatarBorderType: props.avatarBorderType,\n      icon: props.iconKey ? item[props.iconKey] : null,\n      hover: props.hover === false ? false : true,\n      onClick: function onClick() {\n        handleItemClick(getItem(item));\n        if (props.onItemClick) props.onItemClick(item);\n      },\n      item: getItem(item)\n    });\n  })), props.footer(filtered().length)));\n};\n\nexport default AutoComplete;","map":{"version":3,"sources":["/home/yobi/Desktop/testFinal/node_modules/@assenti/rui-components/lib/autoComplete/index.js"],"names":["_slicedToArray","React","useState","Dropdown","InputField","List","Icon","strinfigyClassObject","AutoComplete","props","_useState","_useState2","visible","setVisible","_useState3","_useState4","search","setSearch","className","btn","maxHeight","contentMaxHeight","color","getItem","item","lower","itemKey","toLowerCase","filtered","items","filter","includes","handleItemClick","setTimeout","handleClear","onClear","handleSuffix","loading","createElement","name","suffix","style","width","closeManaged","dark","trigger","disabled","required","readOnly","lifted","borderType","uppercase","whiteBackground","prefix","value","size","clearable","onFocus","onBlur","onChange","e","target","placeholder","label","hintColor","header","listHeader","map","index","Item","key","avatar","avatarKey","avatarSize","avatarBorderType","icon","iconKey","hover","onClick","onItemClick","footer","length"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport { Dropdown, InputField, List, Icon } from '../index';\nimport { strinfigyClassObject } from '../utils';\n\nvar AutoComplete = function AutoComplete(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  var className = {\n    btn: 'rui-autocomplete',\n    maxHeight: props.contentMaxHeight ? 'max-height' : '',\n    color: props.color && props.color !== 'default' ? props.color : 'primary',\n    className: props.className ? props.className : ''\n  };\n\n  var getItem = function getItem(item, lower) {\n    return props.itemKey ? lower ? item[props.itemKey].toLowerCase() : item[props.itemKey] : lower ? item.toLowerCase() : item;\n  };\n\n  var filtered = function filtered() {\n    if (search) {\n      return props.items.filter(function (item) {\n        return getItem(item, true).includes(search.toLowerCase());\n      });\n    } else {\n      return [];\n    }\n  };\n\n  var handleItemClick = function handleItemClick(item) {\n    setSearch(item);\n    setTimeout(function () {\n      setVisible(false);\n    });\n  };\n\n  var handleClear = function handleClear() {\n    if (props.onClear) {\n      props.onClear();\n      setSearch('');\n    }\n\n    setVisible(false);\n  };\n\n  var handleSuffix = function handleSuffix() {\n    if (props.loading) {\n      return /*#__PURE__*/React.createElement(Icon, {\n        name: \"loading\",\n        className: \"rui-autocomplete__loading loading\"\n      });\n    } else if (!props.loading && props.suffix) {\n      return props.suffix;\n    } else return null;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: strinfigyClassObject(className),\n    style: props.style\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    visible: visible,\n    width: props.width ? props.width : '',\n    closeManaged: true,\n    dark: props.dark,\n    contentMaxHeight: props.contentMaxHeight,\n    trigger: /*#__PURE__*/React.createElement(InputField, {\n      color: props.color,\n      dark: props.dark,\n      disabled: props.disabled || props.loading,\n      required: props.required,\n      readOnly: props.readOnly,\n      lifted: props.lifted,\n      borderType: props.borderType,\n      uppercase: props.uppercase,\n      whiteBackground: props.whiteBackground,\n      prefix: props.prefix,\n      suffix: handleSuffix(),\n      value: search,\n      size: props.size,\n      clearable: props.clearable,\n      onClear: handleClear,\n      onFocus: function onFocus() {\n        return !props.disabled ? setVisible(true) : {};\n      },\n      onBlur: function onBlur() {\n        return setVisible(false);\n      },\n      onChange: function onChange(e) {\n        return setSearch(e.target.value);\n      },\n      placeholder: props.placeholder,\n      label: props.label,\n      hintColor: props.hintColor\n    })\n  }, /*#__PURE__*/React.createElement(List, {\n    dark: props.dark,\n    size: props.size,\n    header: props.listHeader\n  }, filtered().map(function (item, index) {\n    return /*#__PURE__*/React.createElement(List.Item, {\n      key: index,\n      avatar: props.avatarKey,\n      avatarSize: props.avatarSize,\n      avatarBorderType: props.avatarBorderType,\n      icon: props.iconKey ? item[props.iconKey] : null,\n      hover: props.hover === false ? false : true,\n      onClick: function onClick() {\n        handleItemClick(getItem(item));\n        if (props.onItemClick) props.onItemClick(item);\n      },\n      item: getItem(item)\n    });\n  })), props.footer(filtered().length)));\n};\n\nexport default AutoComplete;"]},"metadata":{},"sourceType":"module"}