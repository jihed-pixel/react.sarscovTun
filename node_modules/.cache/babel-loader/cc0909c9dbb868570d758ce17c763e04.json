{"ast":null,"code":"export default class AsyncStorageInterface {\n  /**\n   * Устанавливает значение для ключа и выполняет функцию обратного вызова после завершения. Возвращает объект-обещание.\n   *\n   * @param  { key, value, callback? } key - ключ. value - значение. callback - функция обратного вызова\n   * @return { Promise }\n   *\n   * @static\n  */\n  static setItem() {}\n  /**\n   * Выбирает элемент и выполняет функцию обратного вызова после завершения. Возвращает объект-обещание.\n   *\n   * @param  { key, callback? } key - ключ. callback - функция обратного вызова\n   * @return { Promise }\n   *\n   * @static\n   */\n\n\n  getItem() {}\n\n  removeItem() {}\n\n  mergeItem() {}\n\n  clear() {}\n\n  getAllKeys() {}\n\n  flushGetRequests() {}\n\n  multiGet() {}\n\n  multiSet() {}\n\n  multiRemove() {}\n\n  multiMerge() {}\n\n}","map":{"version":3,"sources":["/home/jihed/Bureau/projects/tunisia1 (copie)/node_modules/AsyncStorage/interface/AsyncStorage.js"],"names":["AsyncStorageInterface","setItem","getItem","removeItem","mergeItem","clear","getAllKeys","flushGetRequests","multiGet","multiSet","multiRemove","multiMerge"],"mappings":"AAAA,eAAe,MAAMA,qBAAN,CAA2B;AACtC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACI,SAAOC,OAAP,GAAgB,CAAE;AAElB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIC,EAAAA,OAAO,GAAE,CAAE;;AAEXC,EAAAA,UAAU,GAAE,CAAE;;AAEdC,EAAAA,SAAS,GAAE,CAAE;;AAEbC,EAAAA,KAAK,GAAE,CAAE;;AAETC,EAAAA,UAAU,GAAE,CAAE;;AAEdC,EAAAA,gBAAgB,GAAE,CAAE;;AAEpBC,EAAAA,QAAQ,GAAE,CAAE;;AAEZC,EAAAA,QAAQ,GAAE,CAAE;;AAEZC,EAAAA,WAAW,GAAE,CAAE;;AAEfC,EAAAA,UAAU,GAAE,CAAE;;AArCwB","sourcesContent":["export default class AsyncStorageInterface{\n    /**\n     * Устанавливает значение для ключа и выполняет функцию обратного вызова после завершения. Возвращает объект-обещание.\n     *\n     * @param  { key, value, callback? } key - ключ. value - значение. callback - функция обратного вызова\n     * @return { Promise }\n     *\n     * @static\n    */\n    static setItem(){}\n\n    /**\n     * Выбирает элемент и выполняет функцию обратного вызова после завершения. Возвращает объект-обещание.\n     *\n     * @param  { key, callback? } key - ключ. callback - функция обратного вызова\n     * @return { Promise }\n     *\n     * @static\n     */\n    getItem(){}\n\n    removeItem(){}\n\n    mergeItem(){}\n\n    clear(){}\n\n    getAllKeys(){}\n\n    flushGetRequests(){}\n\n    multiGet(){}\n\n    multiSet(){}\n\n    multiRemove(){}\n\n    multiMerge(){}\n}"]},"metadata":{},"sourceType":"module"}